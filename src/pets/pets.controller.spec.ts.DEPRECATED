import { Test, TestingModule } from '@nestjs/testing';
import { PetsController } from './pets.controller';
import { PetsService } from './pets.service';

jest.mock('./pets.service');

describe('PetsController', () => {
  let petsController: PetsController;
  let petsService: PetsService;

  beforeEach(async () => {
    const petsModule: TestingModule = await Test.createTestingModule({
      controllers: [PetsController],
      providers: [PetsService],
    }).compile();

    petsController = petsModule.get<PetsController>(PetsController);
    petsService = petsModule.get<PetsService>(PetsService);
  });

  it('should be defined', () => {
    expect(petsController).toBeDefined();
    expect(petsService).toBeDefined();
  });

  describe('function create', () => {
    it('create one pet', async () => {
      const pet = {
        name: 'Firulais',
        type: 'perro',
        sex: 'male',
        weight: 23,
        color: 'negro',
        birthday: '2020-06-03',
        notes: 'Responde al apodo Firu',
        owners: ['61d433863260b40e79f87db1'],
      };

      const spy = jest.spyOn(petsService, 'create');

      await petsController.create(pet);
      expect(spy).toBeCalled();
      expect(spy).toBeCalledTimes(1);
    });
  });

  describe('function findAll', () => {
    it('get all pets', async () => {
      const spy = jest.spyOn(petsService, 'findAll');

      await petsController.findAll(1, 10, 'example name');
      expect(spy).toBeCalled();
      expect(spy).toBeCalledTimes(1);
    });

    it('get all pets with no params', async () => {
      const spy = jest.spyOn(petsService, 'findAll');

      await petsController.findAll(null, null, null);
      expect(spy).toBeCalled();
      expect(spy).toBeCalledTimes(1);
    });
  });

  describe('function findOne', () => {
    it('get one pet', async () => {
      const spy = jest.spyOn(petsService, 'findOne');

      await petsController.findOne('61d433863260b40e79f87db1');
      expect(spy).toBeCalled();
      expect(spy).toBeCalledTimes(1);
    });
  });

  describe('function update', () => {
    it('update a pet', async () => {
      const pet = {
        name: 'Firulais',
        type: 'perro',
        sex: 'male',
        weight: 23,
        color: 'negro',
        birthday: '2020-06-03',
        notes: 'Responde al apodo Firu',
        owners: ['61d433863260b40e79f87db1'],
      };

      const spy = jest.spyOn(petsService, 'update');

      await petsController.update('61d433863260b40e79f87db1', pet);
      expect(spy).toBeCalled();
      expect(spy).toBeCalledTimes(1);
    });
  });

  describe('function delete', () => {
    it('delete a pet', async () => {
      const spy = jest.spyOn(petsService, 'delete');

      await petsController.delete('61d433863260b40e79f87db1');
      expect(spy).toBeCalled();
      expect(spy).toBeCalledTimes(1);
    });
  });
});
